import 'dotenv/config'
import { bot } from './bot.js'
import {
	gameCommand,
	infoCommand,
	notUnderstandCommand,
	refCommand,
	setMyCommands,
	startCommand,
} from './commands/index.js'

import { createUserActions } from './actions/user/index.js'
import { findRewardInfoByUserID } from './db_querys/reward/index.js'
import { completeTask1, findTaskInfoByUserID } from './db_querys/task/index.js'
import {
	findUserByChatId,
	updateUserLose,
	updateUserWin,
} from './db_querys/user/index.js'
import { boxOptions, shopOptions, startGameOptions } from './options.js'

export const chats = new Object()

const startApp = async () => {
	setMyCommands()
	bot.on('message', async msg => {
		try {
			const chatId = msg.chat.id
			const username = msg.chat.username
			const firstname = msg.chat.first_name
			const text = msg.text
			const lang = msg.from.language_code
			const user = await findUserByChatId(chatId)
			if (!user) {
				return await createUserActions(chatId, username, firstname, lang, text)
			}
			if (text === '/start') {
				return await startCommand(chatId, user)
			}
			return await notUnderstandCommand(chatId, user)
		} catch (error) {
			console.log(error)
		}
	})
	bot.on('callback_query', async msg => {
		try {
			const data = msg.data
			const chatId = msg.message.chat.id
			const user = await findUserByChatId(chatId)
			const userReward = await findRewardInfoByUserID(user.id)
			const userTask = await findTaskInfoByUserID(user.id)
			if (data === '/info') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await infoCommand(chatId, user)
			}
			if (data === '/ref') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await refCommand(chatId, user)
			}
			if (data === '/tasks') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await bot.sendMessage(
					chatId,
					`‚ùáÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è—é\n\n–í—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞–Ω–∏—è - –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ ${process.env.COIN_NAME}!\n–í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ.\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ –ø–æ ${process.env.COIN_FOR_TASK} ${process.env.COIN_NAME} –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è`,
					{
						parse_mode: 'HTML',
						reply_markup: JSON.stringify({
							inline_keyboard: [
								[
									{
										text: `${
											userTask.task1 ? '‚úÖ' : '‚ùáÔ∏è'
										}–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞ ${process.env.COIN_NAME}`,
										callback_data: '/task1',
									},
								],
							],
						}),
					}
				)
			}
			if (data === '/task1') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				if (userTask.task1) {
					return await bot.sendMessage(
						chatId,
						`‚úÖ–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç—É –∑–∞–¥–∞—á—É`,
						{
							parse_mode: 'HTML',
							reply_markup: JSON.stringify({
								inline_keyboard: [
									[
										{ text: '–ù–∞–∑–∞–¥', callback_data: '/tasks' },
										{
											text: '‚ôªÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
											callback_data: '/goToMainMenu',
										},
									],
								],
							}),
						}
					)
				} else {
					return await bot.sendMessage(
						chatId,
						`–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª ${process.env.TASK1}.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å.\n–í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É —Ç—ã –ø–æ–ª—É—á–∏—à—å ${process.env.COIN_FOR_TASK} ${process.env.COIN_NAME}`,
						{
							parse_mode: 'HTML',
							reply_markup: JSON.stringify({
								inline_keyboard: [
									[{ text: '–ü–µ—Ä–µ–π—Ç–∏', url: process.env.TASK1 }],
									[{ text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data: '/checkTask1' }],
									[
										{ text: '–ù–∞–∑–∞–¥', callback_data: '/tasks' },
										{
											text: '‚ôªÔ∏è–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
											callback_data: '/goToMainMenu',
										},
									],
								],
							}),
						}
					)
				}
			}
			if (data === '/checkTask1') {
				const pass = await bot.getChatMember('@luck_drop', chatId)
				if (pass.status === 'left') {
					return await bot.sendMessage(
						chatId,
						'‚ùå–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞'
					)
				} else {
					await completeTask1(user)
					return await bot.sendMessage(
						chatId,
						`‚úÖ–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ ${process.env.COIN_FOR_TASK} ${process.env.COIN_NAME}`
					)
				}
			}
			if (data === '/shop') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await bot.sendMessage(
					chatId,
					`üíé–í –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã,—É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ –ø—Ä–∏—Ä–æ—Å—Ç –≤–∞—à–µ–π —É–¥–∞—á–∏ ${process.env.COIN_NAME}.\n\nüíé–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã –¥–≤—É—Ö –≤–∏–¥–æ–≤:\n\nüéÅ–õ–∞—Ä—Ü—ã - –ø—Ä–æ–¥–∞—é—Ç—Å—è –∑–∞ ${process.env.COIN_NAME} –∏ –¥–∞—é—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${process.env.COIN_NAME} —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏. –õ–∞—Ä—Ü–æ–≤ –º–æ–∂–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.\n\nü™°–¢–∞–ª–∏—Å–º–∞–Ω—ã - –æ–Ω–∏ –¥–∞—é—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${process.env.COIN_NAME} —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏, –∞ –ø–æ–ª—É—á–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∏–º–µ—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.`,
					{
						parse_mode: 'HTML',
						...shopOptions,
					}
				)
			}
			if (data === '/box') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await bot.sendMessage(
					chatId,
					`üíé–í –ú–∞–≥–∞–∑–∏–Ω–µ –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏:\n\n1.C—Ç–∞—Ä—ã–π –ª–∞—Ä–µ—Ü (500 ${process.env.COIN_NAME})\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –æ—Ç 10 –¥–æ 50 ${process.env.COIN_NAME}\n\n2. –†–æ—Å–∫–æ—à–Ω—ã–π –ª–∞—Ä–µ—Ü (2500 ${process.env.COIN_NAME})\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –æ—Ç 60 –¥–æ 250 ${process.env.COIN_NAME}\n\n3. –¢–∞–∏–Ω—Å—Ç–≤–µ–Ω—ã–π –ª–∞—Ä–µ—Ü (5500 ${process.env.COIN_NAME})\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç –æ—Ç 140 –¥–æ 550 ${process.env.COIN_NAME}\n\nüíé–í–∞—à –±–∞–ª–∞–Ω—Å: ${user.LUCK} ${process.env.COIN_NAME}\n\nüíé–ö–∞—Ä—Ç–æ—á–∫–∏ –Ω—É–∂–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ`,
					{
						parse_mode: 'HTML',
						...boxOptions,
					}
				)
			}
			if (data === '/smallBox') {
				if (user.LUCK < process.env.SMALL_BOX_LUCK) {
					return await bot.sendMessage(
						chatId,
						`‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${process.env.COIN_NAME} –¥–ª—è –ø–æ–∫—É–ø–∫–∏!`
					)
				} else {
					await bot.deleteMessage(chatId, msg.message.message_id)
					await addSmallBoxByUserId(user)
					return await bot.sendMessage(
						chatId,
						`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 1 C—Ç–∞—Ä—ã–π –ª–∞—Ä–µ—Ü! –í—Å–µ–≥–æ: ${
							userReward.smallBox + 1
						}`,
						{ parse_mode: 'HTML', ...backToBoxOptions }
					)
				}
			}
			if (data === '/middleBox') {
				if (user.LUCK < process.env.MIDDLE_BOX_LUCK) {
					return await bot.sendMessage(
						chatId,
						`‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${process.env.COIN_NAME} –¥–ª—è –ø–æ–∫—É–ø–∫–∏!`
					)
				} else {
					await bot.deleteMessage(chatId, msg.message.message_id)
					await addMiddleBoxByUserId(user)
					return await bot.sendMessage(
						chatId,
						`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 1 –†–æ—Å–∫–æ—à–Ω—ã–π –ª–∞—Ä–µ—Ü! –í—Å–µ–≥–æ: ${
							userReward.midlelBox + 1
						}`,
						{ parse_mode: 'HTML', ...backToBoxOptions }
					)
				}
			}
			if (data === '/largeBox') {
				if (user.LUCK < process.env.LARGE_BOX_LUCK) {
					return await bot.sendMessage(
						chatId,
						`‚ùå–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ${process.env.COIN_NAME} –¥–ª—è –ø–æ–∫—É–ø–∫–∏!`
					)
				} else {
					await bot.deleteMessage(chatId, msg.message.message_id)
					await addLargeBoxByUserId(user)
					return await bot.sendMessage(
						chatId,
						`‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ 1 –¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–∞—Ä–µ—Ü! –í—Å–µ–≥–æ: ${
							userReward.largeBox + 1
						}`,
						{ parse_mode: 'HTML', ...backToBoxOptions }
					)
				}
			}
			if (data === '/amulet') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await bot.sendMessage(
					chatId,
					`
					üíé–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è —Ç–∞–ª–∏—Å–º–∞–Ω—ã.\n\nüíé–¢–∞–ª–∏—Å–º–∞–Ω—ã –ø—Ä–∏–Ω–æ—Å—è—Ç –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${process.env.COIN_NAME}, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!\n\n1. –ë—Ä–æ–Ω–∑–æ–≤—ã–π —Ç–∞–ª–∏—Å–º–∞–Ω\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç 10 ${process.env.COIN_NAME}\n\n2. –°–µ—Ä–µ–±—Ä—è–Ω—ã–π —Ç–∞–ª–∏—Å–º–∞–Ω\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç 20 ${process.env.COIN_NAME}\n\n3. –ó–æ–ª–æ—Ç–æ–π —Ç–∞–ª–∏—Å–º–∞–Ω\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç 30 ${process.env.COIN_NAME}\n\n4. –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤—ã–π —Ç–∞–ª–∏—Å–º–∞–Ω\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–∏–Ω–æ—Å–∏—Ç 10 ${process.env.COIN_NAME}`,
					{
						parse_mode: 'HTML',
						...amuletOptions,
					}
				)
			}
			if (data === '/inventory') {
				return await bot.sendMessage(chatId, 'inventory')
			}
			if (data === '/connectWallet') {
				await bot.deleteMessage(chatId, msg.message.message_id)

				return await bot.sendMessage(
					chatId,
					`üíé–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –≤ —Å–µ—Ç–∏ $TON –∏ –Ω–∞–∂–º–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å:`,
					{ parse_mode: 'HTML', ...saveWalletOptions }
				)
			}
			if (data === '/saveWallet') {
				console.log(msg)
				return await bot.sendMessage(
					chatId,
					`ÔøΩÔøΩ–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –ø–æ–ª—É—á–∞—Ç—å ${process.env.COIN_NAME}!`,
					{ parse_mode: 'HTML', ...goToMainMenuOptions }
				)
			}
			if (data === '/wallet') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await bot.sendMessage(
					chatId,
					`üíé–ü—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫ –≤ —Å–µ—Ç–∏ $TON, –Ω–∞ –Ω–µ–≥–æ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–∞–≥—Ä–∞–¥—ã –∏ –±—É–¥—É—â–∏–π –∞–∏—Ä–¥—Ä–æ–ø.\n\n üíé–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ—à–µ–ª–µ–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω`,
					{ parse_mode: 'HTML', ...connectWalletOptions }
				)
			}
			if (data === '/goToMainMenu') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return await startCommand(chatId, user)
			}
			if (data === '/game') {
				await bot.deleteMessage(chatId, msg.message.message_id)
				return gameCommand(chatId)
			}
			if (data == chats[chatId]) {
				await updateUserWin(user)
				await bot.editMessageText(
					`ü•≥–í—ã –≤—ã–±—Ä–∞–ª–∏ ${data}, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É–≥–∞–¥–∞–ª–∏!\n–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${
						process.env.WIN_COIN
					} ${process.env.COIN_NAME}, –æ—Å—Ç–∞–ª–æ—Å—å ${
						Number(user.LUCK) + Number(process.env.WIN_COIN)
					} ${process.env.COIN_NAME}
					`,
					{
						chat_id: chatId,
						message_id: msg.message.message_id,
					},
					{ parse_mode: 'HTML' }
				)
				return await bot.sendMessage(
					chatId,
					'X–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?',
					startGameOptions
				)
			} else {
				if (user.LUCK <= 0) {
					await updateUserLose(user)
					await bot.editMessageText(
						`ü•∫–í—ã –≤—ã–±—Ä–∞–ª–∏ ${data}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, –±—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ ${chats[chatId]}.\n–û—Å—Ç–∞–ª–æ—Å—å ${user.LUCK} ${process.env.COIN_NAME}, –∫–∞–∑–∏–Ω–æ –∏ —Å—Ç–∞–≤–∫–∏ —è–≤–Ω–æ –Ω–µ –≤–∞—à–∞ —Ç–µ–º–∞
						`,
						{
							chat_id: chatId,
							message_id: msg.message.message_id,
						},
						{ parse_mode: 'HTML' }
					)
				} else {
					await updateUserLose(user)
					await bot.editMessageText(
						`ü•∫–í—ã –≤—ã–±—Ä–∞–ª–∏ ${data}, –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏, –±—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ —á–∏—Å–ª–æ ${
							chats[chatId]
						}.\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ ${process.env.LOSE_COIN} ${
							process.env.COIN_NAME
						}, –æ—Å—Ç–∞–ª–æ—Å—å ${user.LUCK - process.env.LOSE_COIN} ${
							process.env.COIN_NAME
						}
						`,
						{
							chat_id: chatId,
							message_id: msg.message.message_id,
						},
						{ parse_mode: 'HTML' }
					)
				}

				return await bot.sendMessage(
					chatId,
					'X–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?',
					startGameOptions
				)
			}
		} catch (error) {
			console.log(error)
		}
	})
}

startApp()
